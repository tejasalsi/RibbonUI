package our.company.name.loan.designed.ui.implementations;

import org.mortbay.log.Log;

import our.company.name.loan.application.custom.ui.CashDetailsHLayout;
import our.company.name.loan.application.custom.ui.ChequeDetailsHLayout;
import our.company.name.loan.application.custom.ui.LoanApplicantDetailsFLayout;
import our.company.name.loan.application.custom.ui.LoanDetailsHLayout;
import our.company.name.loan.application.custom.ui.LoanGuarantorDetailsFLayout;
import our.company.name.loan.application.custom.ui.LoanSubmitHLayout;
import our.company.name.loan.application.custom.ui.PaymentDetailsHLayout;
import our.company.name.loan.application.custom.ui.ProductDetailHLayout;
import our.company.name.loan.application.custom.ui.TotalLoanHLayout;
import our.company.name.loan.application.custom.ui.components.LoanMenuBar;
import our.company.name.loan.designed.ui.interfaces.INavigate;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

@SuppressWarnings("serial")
public class Tabbed extends CustomComponent implements View, INavigate {

	private VerticalLayout mainLayout;
	private VerticalLayout backgroundVerticalLayout;
	private TabSheet loanTabSheet;
	private FormLayout loanSummaryFLayout;
	private GridLayout loanDetailsGLayout;
	private HorizontalLayout loanDetailHLayout;
	private LoanGuarantorDetailsFLayout loanGuarantorDetailsFLayout;
	private LoanApplicantDetailsFLayout loanApplicantDetailsFLayout;
	private LoanMenuBar loanMenu;
	private ProductDetailHLayout productDetailHLayout;
	private LoanDetailsHLayout loanDetailsHLayout;
	private PaymentDetailsHLayout paymentDetailsHLayout;
	private LoanSubmitHLayout loanSubmitHLayout;
	private TotalLoanHLayout totalLoanHLayout;
	private CashDetailsHLayout cashDetailsHLayout;
	private ChequeDetailsHLayout chequeDetailsHLayout;

	public static final String NAME = "tabs";

	@SuppressWarnings("unused")
	private boolean isPaymentByCheque;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public Tabbed() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		cashDetailsHLayout = new CashDetailsHLayout();
		chequeDetailsHLayout = new ChequeDetailsHLayout();

		// temporayFix();

		addAllButtonClickListeners();

	}

	/**
	 * This method is a temporary fix to populate all the text fields. While
	 * deployment-build this method must be removed
	 */
	@SuppressWarnings("unused")
	private void temporayFix() {
		productDetailHLayout.assetValueTxtFld.setValue("Asset");
		productDetailHLayout.regNoTxtFld.setValue("Reg Numbers");
		loanDetailsHLayout.loanAmountTxtFld.setValue("100000");
		paymentDetailsHLayout.beneficiaryTxtFld.setValue("Banks");

	}

	@Override
	public void addAllButtonClickListeners() {

		this.loanSubmitHLayout.checkDataBtn
				.addClickListener(new Button.ClickListener() {

					@Override
					public void buttonClick(ClickEvent event) {
						int errors = validateAllDataFields();

						if (errors == 0) {

							// there are no errors in data entry
							loanSubmitHLayout.submitBtn.setEnabled(true);

						} else {

							Window window = new Window(errors
									+ " Errors Detected in Loan Data Entry");
							window.setClosable(true);
							window.setModal(true);
							window.setResizable(false);
							VerticalLayout errorLabelsLayout = new VerticalLayout();

							Label errorLabel = new Label(errors
									+ " Errors Detected in Loan Data Entry");

							errorLabelsLayout.addComponent(errorLabel);
							window.setContent(errorLabelsLayout);

							UI.getCurrent().addWindow(window);

						}
					}
				});

		this.loanSubmitHLayout.submitBtn
				.addClickListener(new Button.ClickListener() {

					@Override
					public void buttonClick(ClickEvent event) {

						loanApplicantDetailsFLayout.removeAllTextValidators();
						loanGuarantorDetailsFLayout.removeAllTextValidators();
						productDetailHLayout.removeAllTextValidators();
						loanDetailsHLayout.removeAllTextValidators();
						paymentDetailsHLayout.removeAllTextValidators();

						loanSubmitHLayout.submitBtn.setEnabled(false);

					}
				});

		this.paymentDetailsHLayout.repaymodeOptionGroup
				.addValueChangeListener(new ValueChangeListener() {

					@Override
					public void valueChange(ValueChangeEvent event) {

						String radioButtonValue = (String) paymentDetailsHLayout.repaymodeOptionGroup
								.getValue();

						Log.info("Payment Mode Selected = {}", radioButtonValue);

						if (radioButtonValue.equals(paymentDetailsHLayout.CASH)) {

							isPaymentByCheque = false;
							loanDetailsGLayout.removeComponent(1, 1);
							loanDetailsGLayout.addComponent(cashDetailsHLayout,
									1, 1);

						} else {

							isPaymentByCheque = true;
							loanDetailsGLayout.removeComponent(1, 1);
							loanDetailsGLayout.addComponent(
									chequeDetailsHLayout, 1, 1);
						}
					}
				});
	}

	private int validateAllDataFields() {

		// Step-1) Validate fields
		int errors = 0;

		// Step-1) Validate Basic Details Tab
		// Step-1.1) Validate LoanApplicantDetailsFLayout
		loanApplicantDetailsFLayout.addAllTextValidators();
		errors = errors + loanApplicantDetailsFLayout.validate();

		// Step-1.2) Validate LoanGuarantorDetailsFLayout
		loanGuarantorDetailsFLayout.addAllTextValidators();
		errors = errors + loanGuarantorDetailsFLayout.validate();

		// Step-2) Validate Loan Details Tab
		// Step-2.1) Validate productDetailHLayout
		productDetailHLayout.addAllTextValidators();
		errors = errors + productDetailHLayout.validate();

		// Step-2.2) Validate loanDetailsHLayout
		loanDetailsHLayout.addAllTextValidators();
		errors = errors + loanDetailsHLayout.validate();

		// Step-2.3) Validate paymentDetailsHLayout
		paymentDetailsHLayout.addAllTextValidators();
		errors = errors + paymentDetailsHLayout.validate();

		System.out.println("Complete errors : " + errors);

		return errors;

	}

	@Override
	public void enter(ViewChangeEvent event) {

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		// setWidth("100.0%");
		// setHeight("100.0%");

		loanMenu = new LoanMenuBar();
		mainLayout.addComponent(loanMenu, 0);

		// backgroundVerticalLayout
		backgroundVerticalLayout = buildBackgroundVerticalLayout();
		mainLayout.addComponent(backgroundVerticalLayout, 1);
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildBackgroundVerticalLayout() {
		// common part: create layout
		backgroundVerticalLayout = new VerticalLayout();
		backgroundVerticalLayout.setImmediate(false);
		backgroundVerticalLayout.setWidth(100.0f, Unit.PERCENTAGE);
		backgroundVerticalLayout.setHeight(100.0f, Unit.PERCENTAGE);
		// backgroundVerticalLayout.setMargin(false);

		// loanTabSheet
		loanTabSheet = buildLoanTabSheet();
		backgroundVerticalLayout.addComponent(loanTabSheet);
		backgroundVerticalLayout.setComponentAlignment(loanTabSheet,
				new Alignment(48));

		return backgroundVerticalLayout;
	}

	@AutoGenerated
	private TabSheet buildLoanTabSheet() {
		// common part: create layout
		loanTabSheet = new TabSheet();
		loanTabSheet.setImmediate(false);
		loanTabSheet.setWidth("100.0%");
		loanTabSheet.setHeight("100.0%");

		// loanDetailHLayout
		loanDetailHLayout = buildLoanDetailHLayout();
		loanTabSheet.addTab(loanDetailHLayout, " Basic Details ", null);

		// loanDetailsGLayout
		loanDetailsGLayout = buildLoanDetailsGLayout();
		loanTabSheet.addTab(loanDetailsGLayout, " Loan Details ", null);

		// loanSummaryFLayout
		loanSummaryFLayout = new FormLayout();
		loanSummaryFLayout.setImmediate(true);
		loanSummaryFLayout.setWidth("100.0%");
		loanSummaryFLayout.setHeight("100.0%");
		loanSummaryFLayout.setMargin(true);
		loanSummaryFLayout.setSpacing(true);
		loanTabSheet.addTab(loanSummaryFLayout, " Loan Summary ", null);

		return loanTabSheet;
	}

	@AutoGenerated
	private GridLayout buildLoanDetailsGLayout() {

		loanDetailsGLayout = new GridLayout(2, 3);
		loanDetailsGLayout.setImmediate(true);
		loanDetailsGLayout.setWidth("100.0%");
		loanDetailsGLayout.setHeight("100.0%");
		loanDetailsGLayout.setMargin(true);

		// First Row
		productDetailHLayout = new ProductDetailHLayout();
		loanDetailsGLayout.addComponent(productDetailHLayout, 0, 0);

		loanDetailsHLayout = new LoanDetailsHLayout();
		loanDetailsGLayout.addComponent(loanDetailsHLayout, 1, 0);

		// Second Row
		paymentDetailsHLayout = new PaymentDetailsHLayout();
		loanDetailsGLayout.addComponent(paymentDetailsHLayout, 0, 1);

		// Third Row
		totalLoanHLayout = new TotalLoanHLayout();
		loanDetailsGLayout.addComponent(totalLoanHLayout, 0, 2);

		loanSubmitHLayout = new LoanSubmitHLayout();
		loanDetailsGLayout.addComponent(loanSubmitHLayout, 1, 2);

		return loanDetailsGLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildLoanDetailHLayout() {
		// common part: create layout
		loanDetailHLayout = new HorizontalLayout();
		loanDetailHLayout.setImmediate(true);
		loanDetailHLayout.setWidth("100.0%");
		loanDetailHLayout.setHeight("100.0%");
		loanDetailHLayout.setMargin(false);

		// loanApplicantDetailsFLayout
		loanApplicantDetailsFLayout = new LoanApplicantDetailsFLayout();
		loanApplicantDetailsFLayout.setImmediate(false);
		loanApplicantDetailsFLayout.setWidth("-1px");
		loanApplicantDetailsFLayout.setHeight("-1px");
		loanDetailHLayout.addComponent(loanApplicantDetailsFLayout);
		loanDetailHLayout.setComponentAlignment(loanApplicantDetailsFLayout,
				new Alignment(48));

		// loanGuarantorDetailsFLayout
		loanGuarantorDetailsFLayout = new LoanGuarantorDetailsFLayout();
		loanGuarantorDetailsFLayout.setImmediate(false);
		loanGuarantorDetailsFLayout.setWidth("-1px");
		loanGuarantorDetailsFLayout.setHeight("-1px");
		loanDetailHLayout.addComponent(loanGuarantorDetailsFLayout);
		loanDetailHLayout.setComponentAlignment(loanGuarantorDetailsFLayout,
				new Alignment(48));

		return loanDetailHLayout;
	}

	@Override
	public void navigateTo(String vaadinPageName) {

	}

}
