package our.company.name.loan.designed.ui.implementations;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import our.company.name.application.utils.BooleanAndMessages;
import our.company.name.application.utils.RandomPasswordGenerator;
import our.company.name.application.utils.StringConstants;
import our.company.name.loan.dao.EmailDao;
import our.company.name.loan.dao.NewUserDao;
import our.company.name.loan.dao.UserDao;
import our.company.name.loan.designed.ui.interfaces.INavigate;
import our.company.name.spring.SpringContextHelper;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.VaadinServlet;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class ForgotPasswordView extends CustomComponent implements View,
		INavigate {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label messageLbl;
	@AutoGenerated
	private Button newUserBtn;
	@AutoGenerated
	private Button loginPageBtn;
	@AutoGenerated
	private Button sendEmailBtn;
	@AutoGenerated
	private TextField emailIdTxt;
	@AutoGenerated
	private Label enterEmailLbl;

	/** Non UI Variables Declaration (START) */
	static Logger log = LoggerFactory.getLogger(ForgotPasswordView.class);
	public static final String NAME = "forgotPassword";

	SpringContextHelper helper = null;
	UserDao userDao = null;
	EmailDao emailDao = null;

	/** Non UI Variables Declaration (END) */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ForgotPasswordView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		
		helper = new SpringContextHelper(VaadinServlet.getCurrent()
				.getServletContext());

		addAllButtonClickListeners();

	}

	@Override
	public void addAllButtonClickListeners() {

		sendEmailBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				String autoGeneratedPassword = RandomPasswordGenerator
						.generate();

				NewUserDao newUserDao = (NewUserDao) helper
						.getBean("newUserDao");

				BooleanAndMessages passowrdUpdateStatus = newUserDao
						.updatePasswordOfExistingUser(emailIdTxt.getValue(),
						autoGeneratedPassword);

				if (passowrdUpdateStatus.state) {
					// The email-ID is present in "User" table in DB. The
					// password has been successfully changed in DB. Now we need
					// to send the password in email to user.

					emailDao = (EmailDao) helper.getBean("emailDao");

					BooleanAndMessages status = emailDao.sendPasswordInEmail(
							emailIdTxt.getValue(), autoGeneratedPassword);

					if (status.state) {

						Notification.show(
								passowrdUpdateStatus.priorityMessage1,
								passowrdUpdateStatus.priorityMessage2,
								Type.HUMANIZED_MESSAGE);

						navigateTo(LoginView.NAME);

					} else {
						Notification.show(passowrdUpdateStatus.priorityMessage1,
								passowrdUpdateStatus.priorityMessage2,
								Type.ERROR_MESSAGE);
						emailIdTxt.setValue(StringConstants.EMPTY_STRING);
						
						return;
					}

				} else {
					// The email-ID is not present in "User" table in DB.
					Notification.show(passowrdUpdateStatus.priorityMessage1,
							passowrdUpdateStatus.priorityMessage2,
							Type.ERROR_MESSAGE);
					emailIdTxt.setValue(StringConstants.EMPTY_STRING);
					return;
				}
			}

		});

		loginPageBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				navigateTo(LoginView.NAME);

			}
		});

		newUserBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				navigateTo(NewUserView.NAME);

			}
		});

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// enterEmailLbl
		enterEmailLbl = new Label();
		enterEmailLbl.setImmediate(false);
		enterEmailLbl.setWidth("-1px");
		enterEmailLbl.setHeight("-1px");
		enterEmailLbl.setValue("Email-ID :");
		mainLayout.addComponent(enterEmailLbl, "top:60.0px;left:66.0px;");

		// emailIdTxt
		emailIdTxt = new TextField();
		emailIdTxt.setImmediate(false);
		emailIdTxt.setWidth("280px");
		emailIdTxt.setHeight("-1px");
		emailIdTxt.setInputPrompt("Enter your registered email ID");
		mainLayout.addComponent(emailIdTxt, "top:60.0px;left:140.0px;");

		// sendEmailBtn
		sendEmailBtn = new Button();
		sendEmailBtn.setCaption("Send my password on Email");
		sendEmailBtn.setImmediate(false);
		sendEmailBtn.setWidth("-1px");
		sendEmailBtn.setHeight("-1px");
		mainLayout.addComponent(sendEmailBtn, "top:100.0px;left:180.0px;");

		// loginPageBtn
		loginPageBtn = new Button();
		loginPageBtn.setCaption("    Login    ");
		loginPageBtn.setImmediate(false);
		loginPageBtn.setWidth("-1px");
		loginPageBtn.setHeight("-1px");
		mainLayout.addComponent(loginPageBtn, "top:154.0px;left:178.0px;");

		// newUserBtn
		newUserBtn = new Button();
		newUserBtn.setCaption("I am a New User");
		newUserBtn.setImmediate(false);
		newUserBtn.setWidth("-1px");
		newUserBtn.setHeight("-1px");
		mainLayout.addComponent(newUserBtn, "top:154.0px;left:280.0px;");

		// messageLbl
		messageLbl = new Label();
		messageLbl.setImmediate(false);
		messageLbl.setWidth("-1px");
		messageLbl.setHeight("-1px");
		messageLbl.setValue("We will send you a new password on Email");
		mainLayout.addComponent(messageLbl, "top:20.0px;left:178.0px;");

		return mainLayout;
	}


	@Override
	public void enter(ViewChangeEvent event) {

	}

	@Override
	public void navigateTo(String VaadinPageName) {
		getUI().getNavigator().navigateTo(LoginView.NAME);
	}


}
