package our.company.name.loan.designed.ui.implementations;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import our.company.name.application.utils.BooleanAndMessages;
import our.company.name.application.utils.StringConstants;
import our.company.name.loan.application.pojos.User;
import our.company.name.loan.dao.NewUserDao;
import our.company.name.loan.designed.ui.interfaces.INavigate;
import our.company.name.spring.SpringContextHelper;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.VaadinServlet;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class NewUserView extends CustomComponent implements View, INavigate {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label messageLbl;
	@AutoGenerated
	private Button forgotPasswordBtn;
	@AutoGenerated
	private Button backBtn;
	@AutoGenerated
	private Button submitBtn;
	@AutoGenerated
	private PasswordField passwordField2;
	@AutoGenerated
	private PasswordField passwordField1;
	@AutoGenerated
	private TextField mobileTextField;
	@AutoGenerated
	private Label passwordLbl2;
	@AutoGenerated
	private Label passwordLbl1;
	@AutoGenerated
	private Label mobileLbl;
	@AutoGenerated
	private Label emailLbl;
	@AutoGenerated
	private TextField emailTextField;
	@AutoGenerated
	private TextField nameTextField;
	@AutoGenerated
	private Label nameLbl;

	/** Non UI Variables Declaration (START) */
	static Logger log = LoggerFactory.getLogger(NewUserView.class);
	public static final String NAME = "newUserRegistration";

	SpringContextHelper helper = null;
	NewUserDao newUserDao = null;

	/** Non UI Variables Declaration (END) */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public NewUserView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		helper = new SpringContextHelper(VaadinServlet.getCurrent()
				.getServletContext());

		newUserDao = (NewUserDao) helper.getBean("newUserDao");

		addAllButtonClickListeners();

	}


	@Override
	public void addAllButtonClickListeners() {
		/** Button Click Listeners Code (START) */

		forgotPasswordBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				// Navigate again to Forgot Password Page
				navigateTo(ForgotPasswordView.NAME);

			}
		});

		backBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				// Navigate again to Login Page
				navigateTo(LoginView.NAME);

			}
		});

		submitBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				// Step 1: Check whether user has entered valid password.

				boolean isPasswordValid = checkPasswordFields();

				if (isPasswordValid) {

					// Step 2: Collect Data from all text fields.

					User user = new User();

					user.firstname = nameTextField.getValue();

					// This is temporary arrangement
					user.lastname = user.firstname;

					user.email = emailTextField.getValue();
					user.mobile = mobileTextField.getValue();
					user.password = passwordField1.getValue();

					// Step 3: Create new User

					BooleanAndMessages status = newUserDao.createNewUser(user);

					if (status.state) {

						Notification
								.show(status.priorityMessage1,
										status.priorityMessage2,
										Type.HUMANIZED_MESSAGE);

						navigateTo(LoginView.NAME);

					} else {
						/*
						 * Email-ID provided is already in use by some other
						 * user / Some other problem has occurred
						 */
						Notification.show(status.priorityMessage1,
								status.priorityMessage2, Type.ERROR_MESSAGE);

						resetAllTextFields();

						return;

					}

					// Step 4: Insert the user object into database

				} else {
					messageLbl
							.setValue("Please Enter a Valid Password and enter same password in both the password fields.");
					return;

				}

			}

			private boolean checkPasswordFields() {

				if (passwordField1.getValue().equals(passwordField2.getValue())) {
					return true;
				} else {
					return false;
				}
			}
		});

		/** Button Click Listeners Code (END) */

	}

	private void resetAllTextFields() {

		this.nameTextField.setValue(StringConstants.EMPTY_STRING);
		this.mobileTextField.setValue(StringConstants.EMPTY_STRING);
		this.emailTextField.setValue(StringConstants.EMPTY_STRING);
		this.passwordField1.setValue(StringConstants.BLANK_SPACE);
		this.passwordField2.setValue(StringConstants.BLANK_SPACE);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// nameLbl
		nameLbl = new Label();
		nameLbl.setImmediate(false);
		nameLbl.setWidth("-1px");
		nameLbl.setHeight("-1px");
		nameLbl.setValue("Name:");
		mainLayout.addComponent(nameLbl, "top:40.0px;left:87.0px;");

		// nameTextField
		nameTextField = new TextField();
		nameTextField.setImmediate(false);
		nameTextField.setWidth("240px");
		nameTextField.setHeight("-1px");
		nameTextField.setInputPrompt("Enter your name");
		mainLayout.addComponent(nameTextField, "top:40.0px;left:140.0px;");

		// emailTextField
		emailTextField = new TextField();
		emailTextField.setImmediate(false);
		emailTextField.setWidth("240px");
		emailTextField.setHeight("-1px");
		emailTextField.setInputPrompt("Enter valid Email ID");
		mainLayout.addComponent(emailTextField, "top:80.0px;left:140.0px;");

		// emailLbl
		emailLbl = new Label();
		emailLbl.setImmediate(false);
		emailLbl.setWidth("-1px");
		emailLbl.setHeight("-1px");
		emailLbl.setValue("Email :");
		mainLayout.addComponent(emailLbl, "top:80.0px;left:87.0px;");

		// mobileLbl
		mobileLbl = new Label();
		mobileLbl.setImmediate(false);
		mobileLbl.setWidth("-1px");
		mobileLbl.setHeight("-1px");
		mobileLbl.setValue("Mobile :");
		mainLayout.addComponent(mobileLbl, "top:120.0px;left:80.0px;");

		// passwordLbl1
		passwordLbl1 = new Label();
		passwordLbl1.setImmediate(false);
		passwordLbl1.setWidth("-1px");
		passwordLbl1.setHeight("-1px");
		passwordLbl1.setValue("Password :");
		mainLayout.addComponent(passwordLbl1, "top:160.0px;left:60.0px;");

		// passwordLbl2
		passwordLbl2 = new Label();
		passwordLbl2.setImmediate(false);
		passwordLbl2.setWidth("-1px");
		passwordLbl2.setHeight("-1px");
		passwordLbl2.setValue("Reenter Password :");
		mainLayout.addComponent(passwordLbl2, "top:200.0px;left:20.0px;");

		// mobileTextField
		mobileTextField = new TextField();
		mobileTextField.setImmediate(false);
		mobileTextField.setWidth("240px");
		mobileTextField.setHeight("-1px");
		mobileTextField.setInputPrompt("Enter your 10 digit mobile number");
		mainLayout.addComponent(mobileTextField, "top:120.0px;left:140.0px;");

		// passwordField1
		passwordField1 = new PasswordField();
		passwordField1.setImmediate(false);
		passwordField1.setWidth("240px");
		passwordField1.setHeight("-1px");
		mainLayout.addComponent(passwordField1, "top:160.0px;left:140.0px;");

		// passwordField2
		passwordField2 = new PasswordField();
		passwordField2.setImmediate(false);
		passwordField2.setWidth("240px");
		passwordField2.setHeight("-1px");
		mainLayout.addComponent(passwordField2, "top:200.0px;left:140.0px;");

		// submitBtn
		submitBtn = new Button();
		submitBtn.setCaption("Submit");
		submitBtn.setImmediate(true);
		submitBtn.setWidth("100px");
		submitBtn.setHeight("-1px");
		mainLayout.addComponent(submitBtn, "top:240.0px;left:200.0px;");

		// backBtn
		backBtn = new Button();
		backBtn.setCaption("Login");
		backBtn.setImmediate(true);
		backBtn.setWidth("100px");
		backBtn.setHeight("-1px");
		mainLayout.addComponent(backBtn, "top:280.0px;left:140.0px;");

		// forgotPasswordBtn
		forgotPasswordBtn = new Button();
		forgotPasswordBtn.setCaption("Forgot Password?");
		forgotPasswordBtn.setImmediate(true);
		forgotPasswordBtn.setWidth("-1px");
		forgotPasswordBtn.setHeight("-1px");
		mainLayout.addComponent(forgotPasswordBtn, "top:280.0px;left:249.0px;");

		// messageLbl
		messageLbl = new Label();
		messageLbl.setImmediate(false);
		messageLbl.setWidth("-1px");
		messageLbl.setHeight("18px");
		messageLbl.setValue("Hello New User");
		mainLayout.addComponent(messageLbl, "top:20.0px;left:429.0px;");

		return mainLayout;
	}

	@Override
	public void enter(ViewChangeEvent event) {

	}

	@Override
	public void navigateTo(String vaadinPageName) {
		getUI().getNavigator().navigateTo(vaadinPageName);
	}



}
