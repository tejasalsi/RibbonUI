package our.company.name.loan.designed.ui.implementations;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import our.company.name.application.utils.WrappedSessionDiagnostics;
import our.company.name.loan.application.enums.UserType;
import our.company.name.loan.application.pojos.User;
import our.company.name.loan.dao.UserDao;
import our.company.name.loan.designed.ui.interfaces.INavigate;
import our.company.name.spring.SpringContextHelper;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.VaadinService;
import com.vaadin.server.VaadinServlet;
import com.vaadin.server.WrappedSession;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class LoginView extends CustomComponent implements View, INavigate {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label welcomeLable;

	@AutoGenerated
	private Button newUserBtn;

	@AutoGenerated
	private Button forgotPasswordBtn;

	@AutoGenerated
	private Button loginBtn;

	@AutoGenerated
	private PasswordField passwordField;

	@AutoGenerated
	private Label passwordLbl;

	@AutoGenerated
	private TextField userNameTextField;

	@AutoGenerated
	private Label userNameLbl;

	static Logger log = LoggerFactory.getLogger(LoginView.class);

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public static final String NAME = "login";
	public UserType userType = null;
	private SpringContextHelper helper = null;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public LoginView() {
		setSizeFull();
		buildMainLayout();
		setCompositionRoot(mainLayout);

		helper = new SpringContextHelper(VaadinServlet.getCurrent()
				.getServletContext());

		// TODO: Add Caps-Lock warning on Password field


		// Add All Button Click Listeners
		addAllButtonClickListeners();

	}

	@Override
	public void addAllButtonClickListeners() {

		newUserBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				// Navigate again to New User Page
				log.info("Navigating to New User View");

				navigateTo(NewUserView.NAME);
			}
		});

		forgotPasswordBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				// Navigate again to Forgot Password Page
				log.info("Navigating to Forgot Password Page");

				navigateTo(ForgotPasswordView.NAME);

			}
		});

		loginBtn.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				userType = UserType.RegularUser;

				String userName = userNameTextField.getValue();
				String password = passwordField.getValue();

				log.info("UserName = {}", userName);
				log.info("Password = {}", password);

				final UserDao userDao = (UserDao) helper.getBean("userDao");

				log.info(userDao.toString());

				User user = userDao.isValidUser(userName, password);

				if (user.isValidUser()) {

					try {
						setSessionAttributes(user);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					// User is valid.Navigate to Home Page
					log.info("Navigating to Home Page View");
					navigateTo(HomePage.NAME);

				} else {
					// Navigate again to Login Page
					log.info("Navigating to Login Page View");
					navigateTo(LoginView.NAME);

				}

			}
		});

	}

	public void setSessionAttributes(User user) throws Exception {

		WrappedSession wrappedSession = VaadinService.getCurrentRequest()
				.getWrappedSession();

		switch (userType) {

		case RegularUser:
			wrappedSession.setAttribute("user", user);
			log.info("Session Attribute - user added to wrapped session object");
			WrappedSessionDiagnostics.printSetInformation(wrappedSession
					.getAttributeNames());

		case NewUser: // Add code

		case ForgotPasswordUser: // Add code

		default: // Such a situation should not arise. But Throw an exception to
					// handle it
			log.info("UNKNOWN USER TYPE ERROR");
			// throw new Exception("unknown user type");

		}

	}

	@Override
	public void enter(ViewChangeEvent event) {

	}

	@Override
	public void navigateTo(String VaadinPageName) {
		getUI().getNavigator().navigateTo(VaadinPageName);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// userNameLbl
		userNameLbl = new Label();
		userNameLbl.setImmediate(false);
		userNameLbl.setWidth("-1px");
		userNameLbl.setHeight("-1px");
		userNameLbl.setValue("User Name :");
		mainLayout.addComponent(userNameLbl, "top:86.0px;left:380.0px;");

		// userNameTextField
		userNameTextField = new TextField();
		userNameTextField.setImmediate(true);
		userNameTextField.setWidth("230px");
		userNameTextField.setHeight("-1px");
		userNameTextField.setTabIndex(1);
		mainLayout.addComponent(userNameTextField, "top:80.0px;left:470.0px;");

		// passwordLbl
		passwordLbl = new Label();
		passwordLbl.setImmediate(false);
		passwordLbl.setWidth("-1px");
		passwordLbl.setHeight("-1px");
		passwordLbl.setValue("Password :");
		mainLayout.addComponent(passwordLbl, "top:126.0px;left:380.0px;");

		// passwordField
		passwordField = new PasswordField();
		passwordField.setImmediate(true);
		passwordField.setWidth("230px");
		passwordField.setHeight("-1px");
		passwordField.setTabIndex(2);
		mainLayout.addComponent(passwordField, "top:120.0px;left:470.0px;");

		// loginBtn
		loginBtn = new Button();
		loginBtn.setCaption("Login  ");
		loginBtn.setImmediate(true);
		loginBtn.setWidth("80px");
		loginBtn.setHeight("-1px");
		loginBtn.setTabIndex(3);
		mainLayout.addComponent(loginBtn, "top:160.0px;left:470.0px;");

		// forgotPasswordBtn
		forgotPasswordBtn = new Button();
		forgotPasswordBtn.setCaption("Forgot Password ?");
		forgotPasswordBtn.setImmediate(true);
		forgotPasswordBtn
				.setDescription("Click here to regenerate your Password");
		forgotPasswordBtn.setWidth("-1px");
		forgotPasswordBtn.setHeight("26px");
		forgotPasswordBtn.setTabIndex(4);
		mainLayout.addComponent(forgotPasswordBtn, "top:160.0px;left:570.0px;");

		// newUserBtn
		newUserBtn = new Button();
		newUserBtn.setCaption("SignUp");
		newUserBtn.setImmediate(true);
		newUserBtn.setDescription("Click here for New User Registration");
		newUserBtn.setWidth("-1px");
		newUserBtn.setHeight("-1px");
		newUserBtn.setTabIndex(5);
		mainLayout.addComponent(newUserBtn, "top:20.0px;left:720.0px;");

		// welcomeLable
		welcomeLable = new Label();
		welcomeLable.setImmediate(false);
		welcomeLable.setWidth("-1px");
		welcomeLable.setHeight("-1px");
		welcomeLable.setValue("WELCOME TO RAJ MOTORS");
		mainLayout.addComponent(welcomeLable, "top:22.0px;left:516.0px;");

		return mainLayout;
	}

}
